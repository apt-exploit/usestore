function t(e,r){return new t(((t,n)=>{try{const n=e();r&&r(null,n),t(n)}catch(t){r&&r(t),n(t)}}))}function e(e,r,n){return t.all(e).then((e=>{const o=n?n(e):null;return r&&r(null,o),t.resolve(o)}),(e=>(r&&r(e),t.reject(e))))}class r{static set(e,r,n){return t((()=>{window.localStorage.setItem(e,r)}),n)}static get(e,r){return t((()=>window.localStorage.getItem(e)),r)}static remove(e,r){return t((()=>window.localStorage.removeItem(e)),r)}static clear(e){return t((()=>{window.localStorage.clear()}),e)}static getKeys(e){return t((()=>{const t=window.localStorage.length,e=[];for(const r=0;r<t;r+=1){const t=window.localStorage.key(r);e.push(t)}return e}),e)}static setMultiple(t,n){return e(t.map((t=>r.setItem(key,t[key]))),n)}static getMultiple(t,n){return e(t.map((t=>r.getItem(t))),n,(e=>e.map(((e,r)=>{const n={};return n[t[r]]=e,n}))))}static removeMultiple(t,n){return e(t.map((t=>r.removeItem(t))),n)}}export{r as store};
